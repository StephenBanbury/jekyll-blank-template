<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-03-18T21:48:02+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Creative Reflective Journal</title><subtitle>My Creative Reflective Journal as part of the Falmouth University Creative App Development Masters Degree programme.</subtitle><entry><title type="html">Week Five - Types of App</title><link href="http://localhost:4000/2019/03/14/week-five-types-of-app.html" rel="alternate" type="text/html" title="Week Five - Types of App" /><published>2019-03-14T00:00:00+00:00</published><updated>2019-03-14T00:00:00+00:00</updated><id>http://localhost:4000/2019/03/14/week-five-types-of-app</id><content type="html" xml:base="http://localhost:4000/2019/03/14/week-five-types-of-app.html">&lt;p&gt;This week we have been considering the different types of app and the importance of understanding the markets in which they exist. I found this particularly interesting and useful. I came onto the course with an open mind as to the kind of direction I might follow and, although I’ve come across many of the types of app mentioned here, it is interesting to scrutinise their characteristics in order to categorise them and understand their placement within the existing markets.&lt;/p&gt;

&lt;p&gt;As mentioned in my in my week four post on &lt;a href=&quot;/2019/03/10/week-four-critical-reflection.html&quot;&gt;Critical Reflection&lt;/a&gt;, my intention on coming onto the course was not necessarily to follow a path of game development. However, on the back of some game-like efforts as responses to the course assignments thus far, I have been finding it necessary to start considering exactly what a game is. With this in mind, of the types of app suggested by this week’s course material, for me three stand out - i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;Serious Games&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Gamification&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;Experimental Art App&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;
In the context of my own interests, Serious Games relates to the games that support an educational intent. The highlighted app &lt;code class=&quot;highlighter-rouge&quot;&gt;Dragon Box&lt;/code&gt; certainly applies here. I particularly enjoy the way that the app introduces the concept of algebra, without actually mentioning algebra, or making it in any way clear that it is algebra that the player is actually engaging with. The idea of learning-made-fun is very useful and has to be a very successful way of achieving its aims. The same can be said for those Serious Game apps that fall more into the &lt;em&gt;simulator&lt;/em&gt; category where, for instance, a professional can practice the tools of their trade in a virual environment with an emphasis on the fun element.&lt;br /&gt;&lt;br /&gt;
Gamification takes techniques used in and learned from game design and applies them to apps that are not, first and foremost, games. The app &lt;code class=&quot;highlighter-rouge&quot;&gt;Habitica&lt;/code&gt; takes what would normally be a fairly mundane activity - organisation ones chores and to-do lists - and adds gamic concepts such as unlocking new features, ‘powering-up’ your avatar and earning rewards.&lt;br /&gt;&lt;br /&gt;
I find myself drawn to the idea of the Experimental Art App, in which the enjoyment of engaging in creativity in a new, interesting and often effortless way, shows an area where creative arts and app development can combine in a sense that is pure and uncompromised by having to be something that is decided for it, outside of itself and its own unique existence. The &lt;code class=&quot;highlighter-rouge&quot;&gt;Solstice&lt;/code&gt; collaboration by Bjork, Mac Visio, and Digital Agency MM (Paris) is not just an object of aesthetic beauty in its own right, it is also a new type of musical instrument, a gadget that calls you to engage and play with, whilst it encourages a kind of meditative disposition. Coming from an arts background myself, in which I’ve always enjoyed an experimental approach, I’m not surprised that I find this a particularly interesting area. And I certainly believe there could be some fascinating potential for exploration of the cross-overs between all these categories.&lt;/p&gt;

&lt;h1 id=&quot;market-research&quot;&gt;&lt;strong&gt;Market research&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;The week’s source material suggested some categories for consideration.  As I start to really think about the types of application that I may end up making as a Creative App Developer, I realise that understanding the &lt;code class=&quot;highlighter-rouge&quot;&gt;segmentation&lt;/code&gt; of the market will be more than helpful in defining how and where my own products will fit. In a &lt;code class=&quot;highlighter-rouge&quot;&gt;saturated market&lt;/code&gt;, it’s all about engaging your audience and making your product distinguishable from other apps. &lt;code class=&quot;highlighter-rouge&quot;&gt;Trends&lt;/code&gt; are ephemeral, fleeting, they come and go; but it was pointed out that some ideas can have a &lt;code class=&quot;highlighter-rouge&quot;&gt;'disruptive' effect&lt;/code&gt;, bringing about permanent change and re-thinking of established patterns.&lt;/p&gt;

&lt;p&gt;At this point, I will start considering the how the markets work and the ways in which finding a possible place in the market for a potential product - or realising it is actually best avoided altogether - should be approached.&lt;/p&gt;

&lt;p&gt;As a developer, at the forefront of your mind needs to be how best to engage your audience and to make your product distinguishable from others within the same field. For some time I’ve been considering the pros and cons of producing something that is entirely unique, as compared with something that would slot comfortably within an already established market. This is where Market Research really becomes so important. Taking time to understand the saturated markets we are faced with, analysing trends and patterns and getting to understand the type of apps that have been successes or failures, and the reasons for this, is vital. Central to this must be understanding your potential audience and whether or not, and how, their needs are being met. It seems to me that there is a risk in going out on a limb, but if you get it right there could be huge benefits. On the flip-side, it may seem safe to find and join a fairly established sector, but then you are running the risk of finding that your audience’s needs are already being adequately catered for.&lt;/p&gt;

&lt;p&gt;As was pointed out, there is a wholehearted need for objectivity and honesty, of being realistic and not too precious about your idea. It is all to easy to be tempted to sway market research in favour of your idea. Instead, it is good practice to seek advice from others, such as end users and developers.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some useful tools for market research&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store?hl=en_GB&quot;&gt;Google Play Store&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.co.uk/gp/feature.html?ie=UTF8&amp;amp;docId=1000644603&quot;&gt;Amazon App Store&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/uk/ios/app-store/&quot;&gt;Apple App Store&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://trends.google.co.uk/trends&quot;&gt;Google Trends&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.apptrace.com/&quot;&gt;AppTrace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pewglobal.org/&quot;&gt;Pew Research Centre&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Further reading&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.co.uk/Pocket-Universal-Methods-Design-Innovative/dp/1631593749/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1552603215&amp;amp;sr=1-1&amp;amp;keywords=9781631593741&quot;&gt;&lt;em&gt;Universal methods of design&lt;/em&gt;&lt;/a&gt; by Bela Martin and Bruce Harrington 
(&lt;a href=&quot;https://books.google.co.uk/books?id=bnw6DwAAQBAJ&amp;amp;pg=PT209&amp;amp;lpg=PT209&amp;amp;dq=book+%E2%80%9CUniversal+methods+of+design%E2%80%9D+Bella+Martin+and+Bruce+Harrington&amp;amp;source=bl&amp;amp;ots=xeqmjPlT-h&amp;amp;sig=ACfU3U1o48RsgY7AHvSCSF--1kypVJ6z4g&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=2ahUKEwjakI-r2YLhAhWRqHEKHTyyDOEQ6AEwAnoECAgQAQ#v=onepage&amp;amp;q=book%20%E2%80%9CUniversal%20methods%20of%20design%E2%80%9D%20Bella%20Martin%20and%20Bruce%20Harrington&amp;amp;f=false&quot;&gt;free &lt;em&gt;google books&lt;/em&gt; edition&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spurstartup.com/blog/2017/08/08/broad-or-narrow-defining-the-breadth-of-your-market-niche&quot;&gt;&lt;em&gt;Broad or Narrow? Defining the Breadth of Your Market Niche&lt;/em&gt;&lt;/a&gt; by Joseph Long&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.designkit.org/resources/1&quot;&gt;&lt;em&gt;The Field Guide to Human-Centred Design&lt;/em&gt;&lt;/a&gt; by IDEO.org
&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;types-of-app&quot;&gt;&lt;strong&gt;Types of App&lt;/strong&gt;&lt;br /&gt;&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;briefly..&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Serious Games&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Beyond &lt;em&gt;pure&lt;/em&gt; entertainment.&lt;/li&gt;
      &lt;li&gt;‘&lt;em&gt;Can disrupt&lt;/em&gt;’ and ‘&lt;em&gt;bring about social change&lt;/em&gt;’ - Ian Bogost&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gamification&lt;/strong&gt; &lt;em&gt;(and alternate reality games)&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Incentivise user to upskill&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;Add excitement to everyday chores&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;Example: &lt;a href=&quot;https://habitica.com/static/home&quot;&gt;Habitica&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;See &lt;a href=&quot;https://en.wikipedia.org/wiki/Jane_McGonigal&quot;&gt;Jane McGonigal&lt;/a&gt;: an exponent and designer of such apps&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;eHealth&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;e.g. &lt;a href=&quot;https://www.nhs.uk/change4life/food-facts/sugar&quot;&gt;Sugar Smart&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Casual Creator Apps&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Creativity apps without the steep learning curve&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://metamakersinstitute.com/&quot;&gt;Metamakers&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quantified Self Apps&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Fitbit, garmin, jawbone etc.&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://quantifiedself.com/&quot;&gt;Quantified Self&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Experimental Art App&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Solstice&lt;/em&gt; -  Bjork, Mac Visio, and Digital Agency MM (Paris).&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Pm9g-SyvJRU&quot;&gt;on YouTube&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;Cultural-creator, art/cultural app&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;some-interesting-apps&quot;&gt;&lt;strong&gt;Some interesting apps&lt;/strong&gt;&lt;br /&gt;&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nfb.ca/interactive/circa_1948/&quot;&gt;Circa 1948 - Stan Douglas / NFB Digital Studios&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Stan_Douglas&quot;&gt;Stan Douglas Wikipdia page&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tate.org.uk/art/artists/stan-douglas-3038&quot;&gt;Stan Douglas on the Tate site&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Question: What type of app do you think Circa 1948 could be classified as?&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
I would call this a &lt;strong&gt;&lt;em&gt;Serious Game&lt;/em&gt;&lt;/strong&gt;. It immerses the ‘player’ in a by-gone, real, but unavoidably imaginary world.
Experience is created by the imagination - both of the designer and of the player. 
It must, by its very nature, involve a certain nostalgia for something that is now unobtainable. 
It is sublimation of the &lt;em&gt;ordinary&lt;/em&gt; experience of the past.
The experience nurtures a desire for something recognisable but unreachable.
It is installation art as app, or app as installation art.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Circa 1948&lt;/strong&gt; reminds me of a TV programme about the &lt;a href=&quot;http://www.bbc.co.uk/guides/zk3cmfr&quot;&gt;&lt;strong&gt;BBC Berlin Blitz VR&lt;/strong&gt;&lt;/a&gt; I came across recently.&lt;br /&gt;
I have been struggling to find a link to this very interesting BBC children’s (I think) TV programme, where school-age kids were trying out the VR app. The total immersiveness in the VR world recreated from actual recordings by a journalist accompanying the WW2 bombers on a raid over Berlin, was an incredible experience &lt;em&gt;in itself&lt;/em&gt; and brought into &lt;em&gt;reality&lt;/em&gt; a time and event that was hitherto unreachable and almost unimaginable for the young people. This could also be classed as a &lt;em&gt;serious game&lt;/em&gt;: &lt;br /&gt;
like &lt;em&gt;Circa 1948&lt;/em&gt;, in as much as it is an experience, it is also a &lt;em&gt;game&lt;/em&gt;; it is real and it is fabrication; it fires the imagination and teaches about past experience and of other times and other people; it is educational.&lt;/p&gt;

&lt;p&gt;These really force one to consider, &lt;code class=&quot;highlighter-rouge&quot;&gt;what exactly is a game?!!&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What did I get out of this?&lt;/strong&gt;&lt;br /&gt;
I was encouraged to think about the types / categories of app that exist and how / where they fit within the existing market. 
Understanding the market is all-important - how it is segmented and affected by trends.
Understanding your audience - what are their demographics and technographics?
Finding a niche
Types of app - good to break down the categories as it helps to make sense of the market itself. Of course, these types are subjective and liable to change over time.  There will also always be those that do not easily fit within a single category  or grouping. 
&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;smart-goal&quot;&gt;&lt;strong&gt;SMART goal&lt;/strong&gt;&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Make it specific&lt;/strong&gt;: I would like to understand how the three types of game, outlined in this week’s course material that I find particularly interesting - serious games, gamification, experimental art app - fit within existing markets; what kind of niche have they found for themselves, what is their competition, who is their audience?.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make it measureable&lt;/strong&gt;: I will research three apps - one each of the three types outlined above and write a short piece of 200-400 words for each.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make it attainable&lt;/strong&gt;: I think one of each type and a brief overview is entirely do-able within a few hours.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make it Relevant&lt;/strong&gt;: The information I gain from the exercise will be extremely useful in understanding the kinds of markets that I am likely to be intering myself. I will reflect on how I feel about the respective niches once I understand them better.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Make it Time-based&lt;/strong&gt;: I will spend aproximately one hour on each app and no more than two on any one.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">This week we have been considering the different types of app and the importance of understanding the markets in which they exist. I found this particularly interesting and useful. I came onto the course with an open mind as to the kind of direction I might follow and, although I’ve come across many of the types of app mentioned here, it is interesting to scrutinise their characteristics in order to categorise them and understand their placement within the existing markets.</summary></entry><entry><title type="html">Week four - Critical Reflection</title><link href="http://localhost:4000/2019/03/10/week-four-critical-reflection.html" rel="alternate" type="text/html" title="Week four - Critical Reflection" /><published>2019-03-10T00:00:00+00:00</published><updated>2019-03-10T00:00:00+00:00</updated><id>http://localhost:4000/2019/03/10/week-four-critical-reflection</id><content type="html" xml:base="http://localhost:4000/2019/03/10/week-four-critical-reflection.html">&lt;p&gt;Keeping my Personal Case Study under five minutes was not easy. I now look at the content, watch the video, and cannot help but think it’s perhaps too light, in particular, on &lt;em&gt;depth of analysis&lt;/em&gt; and &lt;em&gt;self-criticism&lt;/em&gt;. This was in large part down to having to continually cut my content in order to fit within the time limit, and maybe not cutting as well as I could have. Of course, if I had spoken faster then I could have fit more in, possibly without losing too much in terms of it being comfortable to listen to. In the end my video editing skills, which were non-existent before this, and not much better now, have prevented me from finding the perfect level of conciseness.  However, I certainly have learned a lot about how to approach - or how &lt;strong&gt;not&lt;/strong&gt; to approach - such a task and will be better for it next time.&lt;/p&gt;

&lt;p&gt;Below is the essence of my Personal Case Study. The video can be seen &lt;a href=&quot;https://www.youtube.com/watch?v=vlmEWzEE1oU&quot;&gt;here&lt;/a&gt;.
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;The reason I am on the Creative App Development MA course&lt;/strong&gt; is due to my interests in both creative practice, particularly music and sound, and software development. I am excited by the sense of exploration and discovery associated with continual technological advancements, particularly in the areas of web and mobile development, inter-connectivity, virtual and augmented reality and sound creation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why my first two projects have been games, and why I am enjoying it&lt;/strong&gt;&lt;br /&gt;
Although I did not embark on the MA in order to become a game developer, I am surprised to have concluded that games can be a useful vehicle for trying out ideas, techniques and technologies. They encourage thinking about how apps can work in terms of engaging people and holding their interest. I believe the interactive and compulsive nature of good game design has much to offer the non-gaming world; in short, cross-overs exist, and these  I would like to explore.&lt;/p&gt;

&lt;p&gt;I formed this opinion through a process of reflection during both the Rapid Ideation and the App Jam activities. The importance of reflection is becoming clear to me – that is, that technical and creative skills alone are not enough. For example, during the App Jam, by continually questioning my progress and adjusting my goals, I was encouraged to move away from my early ideas, which I ultimately decided were quite dull. Instead, I sensed that an animated, arcade-style game play and sense of jeopardy would add a new level of interest to what had hitherto been an intellectual exercise played out in the browser. I now see a huge potential for developing arcade-style word games.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Angular - my JavaScript framework of choice&lt;/strong&gt;&lt;br /&gt;
Over the past few years, the power of web-based applications has been moving from the server and into the browser, leading to more reactive and dynamic applications, such as single page apps, and I have developed an interest in JavaScript, the language of the browser, but I have limited experience and confidence in client-side development. Of the existing JavaScript frameworks and libraries, I decided to learn Angular.  From my own background in Microsoft .NET, C# and SQL Server, I find the structured, strongly-typed and object-oriented nature of &lt;strong&gt;TypeScript&lt;/strong&gt; to be more approachable than pure JavaScript. Angular is also more &lt;em&gt;suitable for complex applications that use services and data connections&lt;/em&gt;.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;making-my-goals-smart&quot;&gt;Making my goals &lt;strong&gt;SMART&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span style=&quot;color:darkblue&quot;&gt;&lt;strong&gt;S&lt;/strong&gt;pecific, &lt;strong&gt;M&lt;/strong&gt;easurable, &lt;strong&gt;A&lt;/strong&gt;ttainable, &lt;strong&gt;R&lt;/strong&gt;elevant, &lt;strong&gt;T&lt;/strong&gt;ime-based&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;In terms of the kind of apps I would like to produce, I did not start the course with any specific goals in mind. I would like to maintain an experimental and explorative approach, but I need to begin focusing on actual ideas that I can consider taking forward. During the App Jam I was surprised how quickly I was able to move from a simple idea to putting a concept into actual code. A moment came where it dawned on me that &lt;em&gt;I had exhausted the process of ideation and I just needed to get on with building the app.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The concept of the &lt;em&gt;SMART&lt;/em&gt; goal acronym has actually been slightly surprising, in that it is more useful than I initially realised. The concept has helped me to focus and clarfy the means by which I hope to achieve my goals.  In fact, more than that, I am finding it actually helps to define those goals in the first place. I suppose, it is only logical that &lt;strong&gt;it is not really possible to analyse &lt;em&gt;how&lt;/em&gt; you will achieve something if at first you have not worked out &lt;em&gt;what it is&lt;/em&gt; you wish to achieve!&lt;/strong&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color:darkblue&quot;&gt;&lt;strong&gt;Goal One&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it specific:&lt;/strong&gt; In the knowledge that this can be a rapid process, I intend to set myself a SMART goal to spend several hours each week exploring ideas, one of which I will take forward as a development concept for the next suitable project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Measureable:&lt;/strong&gt; I will set aside regular times leading up to Easter, i.e. six weeks, in order to create one idea per week.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Attainable:&lt;/strong&gt; A problem I must overcome is the quality of my working environment.  Due to the demands and noise levels produced by a young family, I often need to work at unsociable hours, with all the associated issues of tiredness and concentration levels. Therefore, it is important for me to find periods of quality development time. So, in consultation with my family, at the start of each week I will schedule two, two-hour slots, at a premium time of the day, that can be guaranteed to be distraction-free.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Relevant:&lt;/strong&gt; At the end of the period I will pick one idea that I can take forward for my next project&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Time-based:&lt;/strong&gt; I will have achieved this outcome at the successful conclusion of the six-week period.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style=&quot;color:darkblue&quot;&gt;&lt;strong&gt;Goal Two&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Another goal surrounds the research of technologies to fill holes in my knowledge and help me develop the gamic qualities I mentioned earlier.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it specific:&lt;/strong&gt; I would like to explore available technologies and techniques towards animating graphics and moving user-controlled game-style characters around the browser page.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Measureable:&lt;/strong&gt; For this, I will undertake weekly research and follow relevant courses. Each week’s findings I will document in my weekly journal, where I will discuss their relevance to my work and goals.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Attainable:&lt;/strong&gt; I have access to many resources, including Pluralsight, Udemy, Lynda and YouTube, which I will use as and when required.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Relevant:&lt;/strong&gt; I will begin using this research during the first development project after Easter.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Make it Time-based:&lt;/strong&gt; This I will do over the six weeks available leading up to Week 12.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style=&quot;color:darkblue&quot;&gt;&lt;strong&gt;Future goals&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The act of putting together SMART goals has helped me focus on other goals that I would like to characterise in a similar way. Briefly they include: -&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Bringing myself up to a good confident speed with
    &lt;ul&gt;
      &lt;li&gt;Angular and TypeScript&lt;/li&gt;
      &lt;li&gt;HTML5 and CSS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spend time investigating
    &lt;ul&gt;
      &lt;li&gt;mobile platforms: -
        &lt;ul&gt;
          &lt;li&gt;cross-platform: NativeScript, Ionic, Flutter&lt;/li&gt;
          &lt;li&gt;iOS - Swift&lt;/li&gt;
          &lt;li&gt;Android - Java&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;sound generation: I would like to work with sound like animators work with visuals&lt;/li&gt;
      &lt;li&gt;virtual and augmented reality, particularly, where possible, in the browser and in combination with web technology&lt;/li&gt;
      &lt;li&gt;open web-socket technology&lt;/li&gt;
      &lt;li&gt;cloud and microservice technology&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;These do seem to be big topics though, so making them attainable and relevant in this form will likely prove tricky. I am aware there will need to be some breaking down of these into smaller component parts in order to be able to quantify them in a useful and managable way.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Keeping my Personal Case Study under five minutes was not easy. I now look at the content, watch the video, and cannot help but think it’s perhaps too light, in particular, on depth of analysis and self-criticism. This was in large part down to having to continually cut my content in order to fit within the time limit, and maybe not cutting as well as I could have. Of course, if I had spoken faster then I could have fit more in, possibly without losing too much in terms of it being comfortable to listen to. In the end my video editing skills, which were non-existent before this, and not much better now, have prevented me from finding the perfect level of conciseness. However, I certainly have learned a lot about how to approach - or how not to approach - such a task and will be better for it next time.</summary></entry><entry><title type="html">Week Three - AppJam 2 - The Odd Word Out</title><link href="http://localhost:4000/2019/02/25/week-three-appjam-2.html" rel="alternate" type="text/html" title="Week Three - AppJam 2 - The Odd Word Out" /><published>2019-02-25T00:00:00+00:00</published><updated>2019-02-25T00:00:00+00:00</updated><id>http://localhost:4000/2019/02/25/week-three-appjam-2</id><content type="html" xml:base="http://localhost:4000/2019/02/25/week-three-appjam-2.html">&lt;h3 id=&quot;odd-word-out&quot;&gt;&lt;strong&gt;&lt;center&gt;&lt;span style=&quot;color:darkblue&quot;&gt;Odd Word Out&lt;/span&gt;&lt;/center&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;line-up-the-words-in-your-cross-hair&quot;&gt;&lt;center&gt;Line up the words in your cross-hair&lt;/center&gt;&lt;/h4&gt;
&lt;h4 id=&quot;but-only-shoot-if-your-target-is-stinking-up-the-place&quot;&gt;&lt;center&gt;But only shoot if your target is stinking up the place&lt;/center&gt;&lt;/h4&gt;
&lt;h4 id=&quot;only-shoot-if-your-target-is-the-odd-word-out&quot;&gt;&lt;center&gt;Only shoot if your target is the Odd Word Out!&lt;/center&gt;&lt;br /&gt;&lt;br /&gt;&lt;/h4&gt;

&lt;p&gt;This is the embryonic idea of a more arcade-influenced version of the word-games discussed in my previous journal entry.
&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;\images\the-odd-word-out-1.jpg&quot; alt=&quot;The Odd Word Out 1&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
My initial idea for such a game was for the player to single out the word that is not related to any of the other words that appear on screen. The effect of the words shimmering into existence for a short while before disappearing into the ether should be mesmeric, hypnotic, rhythmic, pulsating - like light-houses. The speed could increase and the time the words appear shortened as the game progresses. As a starting point I liked the potential of this idea. &lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;The mechanics&lt;/strong&gt; &lt;br /&gt;
Using ideas outlined earlier surrounding the use of online Web API services for generating words and related meanings, I imagined a random word being taken as a ‘seed’ and used to generate multiple related words. Added to this list of &lt;em&gt;synonyms&lt;/em&gt; would be another, completely unrelated word - this would be the &lt;em&gt;target&lt;/em&gt;. For the unrelated word I had hoped to use an &lt;strong&gt;API service with a facility dedicated to producing random words&lt;/strong&gt;. Finding one that is free and available and that produces usable results proved, given the time limitations, to be not possible. A point was reached where I needed to make a decision - continue looking for such an API or continue, in the knowledge that I could use ‘dummy’ data for the purpose of development. Understanding how easy it could be to get caught stuck trying to solve a problem that is surmountable in the short term, I decided to move forward without the API during this phase.&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;\images\the-odd-word-out-2.jpg&quot; alt=&quot;The Odd Word Out 2&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Arcade-style word games&lt;/strong&gt;&lt;br /&gt;
These same basic mechanical principles could potentially underpin numerous game ideas and strategies. Armed with this knowledge, in a fairly whimsical moment I was taken back to the now relatively simple, but hugely enjoyable, games of my youth. I found myself entertaining thoughts of thesaurus-generated aliens being shot down, eaten or knocked out by ping-pong balls. I decided this was a relatively fertile territory and the direction I should continue to explore. I realised that even if I was ultimately not able to recreate or, perhaps more accurately, plunder from such a unique and timeless classic as &lt;strong&gt;Asteroids&lt;/strong&gt;, at least I could maybe make use of the simple ideas underpinning this game as the inspiration for something new.
&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;\images\word-arcade-1.jpg&quot; alt=&quot;Word Arcade Games&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Game&lt;/strong&gt;&lt;br /&gt;
Having spent around 12 hours thinking, mapping and reflecting on my ideas so far, I felt this was the point at which I should just &lt;em&gt;get on with it&lt;/em&gt;! I took the &lt;em&gt;Asteroids&lt;/em&gt; idea as inspiration and, without much further planning or thinking about possible end results, I started to bash at my keyboard. First thing was to set up an environment.  I decided to use Angular for this project. I have been learning Angular for the past few months and this provided an opportunity to consolidate what I’ve learned thus far. I am also finding TypeScript to be an enjoyable language to work in and, as it compiles down into JavaScript, it integrates fully with the browser and the DOM, providing an immediate, light and interactive environment for a 2D game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bashing out the code&lt;/strong&gt;&lt;br /&gt;
Firstly, I wanted to quickly get something moving on my screen, so I found a simple JavaScript routine online that moves a div from one corner of a containing div to the opposite. I translated this into TypeScript in my Angular app and amended it to give the div the freedom to move all over the container and to bounce off walls: &lt;em&gt;the div had become a ball&lt;/em&gt;. I then created another ‘ball’ to act as the main player in the game. This ball was not required to set off on a trajectory at a specified direction and speed, but required keyboard input in order to move, the speed increasing the longer the direction keys were pressed - this provides the ball with inertia, similar to the space-craft in &lt;em&gt;Asteroids&lt;/em&gt;. 
At this point I needed more ‘opponent’ balls to bounce around the playing area, so I placed the particulars of the first ball into an object-class and placed this object into an array of objects. The more objects added to the array the more balls that exist on the page. Each of these balls have their own values in terms of direction of travel and speed, so they can act independently. 
&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Ideas developing during development&lt;/strong&gt;&lt;br /&gt;
The plan was always to have each object contain a unique word. Rather than this being a shoot-em-up style game, I decided that the simplest way to make this playable and fun within a relatively short space of time, would be for the player’s ball to bash into the other balls and for winning or losing to be dependent on whether the balls being hit are displaying &lt;em&gt;related&lt;/em&gt; or &lt;em&gt;non-related&lt;/em&gt; words. For this to work, each ball-object would need to store its specific word as a property and collisions between these objects would need to be detected.&lt;br /&gt;
I created a service that calls one of the thesaurus APIs I’d found.  As a seed for this API I created a list of ‘dummy’ random words. Ultimately, I would expect this list to be replaced by random words provided by another API, but as yet I have not found one that suits the purpose. The seed word becomes the player’s own word, whilst a limited selection of synonyms from the thesaurus decorate opponent balls. Then a further selection of balls are given random words.  Collisions are detected for each ball as it moves on to its next step in its path across the screen. If a ball’s coordinates coincide with the player’s ball’s coordinates, then a collision has been detected and the opponent ball’s &lt;em&gt;hit&lt;/em&gt; property is set to true. Once all the balls that &lt;em&gt;do not&lt;/em&gt; carry words from the thesaurus have been hit then the game has been won. If all the balls that &lt;em&gt;do&lt;/em&gt; carry related words have been hit then it’s &lt;em&gt;game over&lt;/em&gt;.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;video_container&quot;&gt;
  &lt;video style=&quot;width:1120px;&quot; autoplay=&quot;&quot; loop=&quot;&quot;&gt;
    &lt;source src=&quot;\media\odd-word-out.mp4&quot; type=&quot;video/mp4&quot; /&gt;
    Woops! Your browser does not support the HTML5 video tag.
  &lt;/video&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stephenbanbury.com/&quot;&gt;Click here to play the game&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use the &lt;em&gt;arrow keys&lt;/em&gt; to navigate your player&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Summing up&lt;/strong&gt;&lt;br /&gt;
Once I’d reached this point I decided to halt development - at least, for the purpose of the AppJam project. Close to &lt;strong&gt;thirty-two hours&lt;/strong&gt; had passed since I began - approximately &lt;strong&gt;twelve hours planning&lt;/strong&gt; followed by &lt;strong&gt;twenty hours coding&lt;/strong&gt;. There had not been an absolute and tightly-defined product known from the start, but as the project progressed, the idea gradually developed and took shape along lines that evolved over time. Perhaps I could have spent more time planning and creating wire-frames, but I reached a point where I thought &lt;em&gt;what’s the point when I know what I’m going to do?&lt;/em&gt; - I just wanted to start putting the idea into code. This approach worked on this occasion, but I realise I may need to spend more time on at the planning stage on future projects.&lt;/p&gt;

&lt;p&gt;Ultimately the time available was plenty for what I wanted to achieve and I have a fairly clear idea of how I’d like to further develop this idea given the time. If I were to use the full available 48 hours, and beyond, I would certainly concentrate and focus on the game’s &lt;strong&gt;educational value&lt;/strong&gt; and any improvements and further development of the game’s playability and aesthetic would be with this in mind: -&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;find a true random word generating API&lt;/li&gt;
  &lt;li&gt;improve and develop the game’s cycle, such as progression through levels of increasing difficulty&lt;/li&gt;
  &lt;li&gt;an interesting system of scoring and indicating progress, possibly with added features such as ‘power-ups’ and extended game-plays.&lt;/li&gt;
  &lt;li&gt;give the game a its own particular aesthetic, a ‘look’ that helps define itself and stand out as unique, through graphic ‘characters’ rather than simple square divs, with the words becoming an intrinsic part of the character-graphics, rather than ‘hacked’ on as they currently are.&lt;/li&gt;
  &lt;li&gt;follow the aesthetic through to an interesting-looking scoreboard and player-progress panel.&lt;/li&gt;
  &lt;li&gt;smoother motion - possibly refactor game making use of a JavaScript library for graphics and animation, such as &lt;a href=&quot;http://p5js.org/&quot;&gt;p5.js&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;add sound and music to help bring the game to life.&lt;/li&gt;
  &lt;li&gt;make the game compatible with mobile devices and touch-screen - maybe I could refactor using a cross-platform solution using a framework such as Ioniq or NativeScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;there-is-significant-potential-for-further-development-of-the-concept-of-arcade-style-word-games&quot;&gt;There is significant potential for further development of the concept of arcade-style word games.&lt;/h1&gt;

&lt;p&gt;As it is, the game is quite playable and I feel satisfied that I have essentially achieved what I set out to achieve. I have also learned new skills along the way.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I have investigated and made use of online API services&lt;/li&gt;
  &lt;li&gt;created something playable that is intrinsically bound to the use of the API&lt;/li&gt;
  &lt;li&gt;successfully moved away from what was becoming a vaguely ‘intellectual’ exercise that I felt was in danger of not being as interesting as I had hoped it would be&lt;/li&gt;
  &lt;li&gt;made creative use of Angular - the platform I’ve been learning&lt;/li&gt;
  &lt;li&gt;created some simple animation - this is new to me and is exciting to make things happen on a screen&lt;/li&gt;
  &lt;li&gt;most of this is new territory for me and that, in itself, is exciting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It has been a hugely enjoyable experience and one that I feel I have come out from with a much clearer idea of what is possible and what is required, not only in terms of future projects on the MA course, but towards my long-term future as a Creative App Developer.&lt;/p&gt;</content><author><name></name></author><summary type="html">Odd Word Out Line up the words in your cross-hair But only shoot if your target is stinking up the place Only shoot if your target is the Odd Word Out!</summary></entry><entry><title type="html">Week Three - AppJam 1 - Three Little Words</title><link href="http://localhost:4000/2019/02/17/week-three-appjam-1.html" rel="alternate" type="text/html" title="Week Three - AppJam 1 - Three Little Words" /><published>2019-02-17T00:00:00+00:00</published><updated>2019-02-17T00:00:00+00:00</updated><id>http://localhost:4000/2019/02/17/week-three-appjam-1</id><content type="html" xml:base="http://localhost:4000/2019/02/17/week-three-appjam-1.html">&lt;h3 id=&quot;three-little-words&quot;&gt;&lt;strong&gt;&lt;center&gt;&lt;span style=&quot;color:darkblue&quot;&gt;Three Little Words&lt;/span&gt;&lt;/center&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;Three words&lt;/strong&gt;: selected randomly using VNA (&lt;em&gt;&lt;strong&gt;v&lt;/strong&gt;erb, &lt;strong&gt;n&lt;/strong&gt;oun, &lt;strong&gt;a&lt;/strong&gt;djective&lt;/em&gt;) cards form the basis of the App Jam activity - an intensive period of development and reflective practice.&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;48 hours&lt;/strong&gt;: the time allocated for this activity. Although it has been suggested that we should try to use the full 48 hours, it is also recognised that we may not be able to find such an amount - after all, it is time which has to exist alongside the usual course study, reading, learning, journal-writing and, of course, everyday life. In my case, the latter is particularly time-consuming in itself, being as it involves a working life and a young and demanding family. At this stage I find I really have little idea of how much time 48 hours is - at least in the sense of finding despersed pockets here and there in which to allocate time both for pure development and for reflection. This is uncharted territory for me. This being the case, I have decided not to try to plan too much in advance but to move forward for short periods before pausing and evaluating what I have done. Hopefully, these moments of reflection will provide the basis and knowledge from which I can plan my next steps.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;guide--opponent--restricted&quot;&gt;&lt;em&gt;&lt;center&gt;&lt;span style=&quot;color:darkblue&quot;&gt;Guide : Opponent : Restricted&lt;/span&gt;&lt;/center&gt;&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;As well as deciding to use at least one of these three words to help define the nature of my app, I also started looking at them, not so much for their individual or collective literal meanings, as for the fact that they, as do all words, have the ability to be transformed and reinterpretted. This can be via, for example, context, order or re-assignment of grammatical useage such as between, for instance, verb, noun, adjective etc.
&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;&lt;center&gt;Verb&lt;/center&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;center&gt;Noun&lt;/center&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;center&gt;Adjective&lt;/center&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;center&gt;Adverb&lt;/center&gt;&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Guide&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Guide&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Guidable&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Guidingly&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Oppose&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Opponent&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Opposing&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Opposingly&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Restrict&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Restrictiveness&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Restricted&lt;/center&gt;&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;&lt;em&gt;&lt;center&gt;Restrictedly&lt;/center&gt;&lt;/em&gt;&lt;br /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Using our words in different sentences transformed by their grammatical useage: -&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;She restricts but guides her opponent&lt;br /&gt;
The guide opposes being restricted&lt;br /&gt;
She is restricted by her opposition&lt;br /&gt;
His opponent is guided by her restrictiveness&lt;br /&gt;
They offer her guidance but in a restricted way&lt;br /&gt;
His opposition to the guide was being restricted&lt;br /&gt;
She is being restricted by the guide&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;I looked into the concepts that come to mind when considering how meanings can be transformed&lt;/strong&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;\images\app-jam-mind-map-1.jpg&quot; alt=&quot;app-jam-mind-map-1&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
.. a path that led me on to thoughts of understanding and mis-understanding, interpretation, translation, encoding and decoding, encrypting and decrypting, symbols, signs, perception and the idea of the actual &lt;strong&gt;medium itself&lt;/strong&gt; being the message (&lt;em&gt;Marshall McLuhan, 1967&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;The thesaurus&lt;/strong&gt;&lt;br /&gt;
The thesaurus is used, usually, to find similar (synonym) or opposite (antonym) words. However, a synonym can sometimes stretch the original meaning so far from its origin that the connection breaks. This can be interesting to explore in itself - the point where meaning is lost in translation and new meanings - or a lack of - unfold. The image below shows the result of playing with a thesaurus in attempting to create sentences similar in meaning to the original but using completely different words. Each word is replaced by a synonym, then the new word replaced with a synonym of its own, and so on. The most synificant disconnects have been highlighted in red. The most stark disconnections are where there are multiple meanings for a word, particularly where each of those meanings are relatively sparce in terms of their own synonyms. For example, ‘brown’ is very specific - it has few alternatives - but ‘fawn’ is one of them. However, there are more meanings than those associated with ‘brown’ only. We can therefore easily get words, such as ‘baby-buck’ which have nothing whatsover to do with the colour brown and ends up providing potential new sentences with totally new meanings.
&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;\images\app-jam-mind-map-2.jpg&quot; alt=&quot;app-jam-mind-map-2&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;br /&gt;
A startling result of this break-down can be seen in the difference betwen the first and last sentences: -&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The quick brown fox jumps over the lazy dog
&lt;br /&gt;
The bountiful angelic phony promenades facing the baffled assistant&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
I began to imagine this effect being played out in some kind of animated graphical representation similar to a &lt;strong&gt;fruit machine&lt;/strong&gt; or a &lt;strong&gt;tombola&lt;/strong&gt;, where sentences are constructed from the results of thesaurus lookups for each of their composite words.&lt;br /&gt;&lt;br /&gt;
Another possible direction is to replace words with images - a full change of media adding further to the abstraction. This could be an interesting way to move forward. A major challenge is finding a convincing way that these ideas can be converted into an interesting and usable game. I decided to let the ideas develop as I played with the materials and mechanisms I found during research and experimentation - it seems there must be a rich source of possibilities that lie in this direction, waiting to be discovered and manipulated as they are uncovered.
&lt;br /&gt;&lt;br /&gt;
I began a search for an online thesaurus with API endpoints I can access for the purpose of abstracting words.
I found a number of thesaurus APIs - some are fully open and free whilst others either require an account to be created in order to access an authentication key or will only allow paid access. Most ask for a creditation and a link on any web application or site produced using their service.  I signed up to the free services where appropriate.:&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.programmableweb.com&quot;&gt;ProgrammableWeb&lt;/a&gt; - API directory&lt;br /&gt;
&lt;a href=&quot;https://words.bighugelabs.com/api.php&quot;&gt;Big Huge Thesaurus&lt;/a&gt; - thesaurus&lt;br /&gt;
&lt;a href=&quot;https://www.datamuse.com/api/&quot;&gt;Datamuse API&lt;/a&gt; - word-finding query engine for developers&lt;br /&gt;
&lt;a href=&quot;https://www.phrases.net/phrases_api.php&quot;&gt;STANDS4 Web Services&lt;/a&gt; - phrases, lyrics, quotes etc.&lt;br /&gt;
&lt;a href=&quot;https://www.wordsapi.com/&quot;&gt;WordsAPI&lt;/a&gt; - some services free&lt;br /&gt;
&lt;a href=&quot;https://opinionated-quotes-api.gigalixirapp.com/&quot;&gt;Opinionated Quotes&lt;/a&gt; - quotations API&lt;br /&gt;
&lt;a href=&quot;https://pixabay.com/api/docs/&quot;&gt;pixabay&lt;/a&gt; - picture gallery API&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;A problem&lt;/strong&gt;&lt;br /&gt;
After a little while exploring what these kind of APIs could offer, I was presented with a problem: none of these, except maybe one, can provide a random selection of words, phrases, quotations, or any other form of language output that can be used to drive a game such as those I had in mind. The one API I could find that will generate anything random is &lt;a href=&quot;https://opinionated-quotes-api.gigalixirapp.com/&quot;&gt;Opinionated Quotes&lt;/a&gt;, which produces random quotations that are generally so obscure and specialised within a particular subject, interest or market, that any use of these would would expect users to have an extensive, wide and varied knowledge of some fairly ‘niche’ subjects.&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;How to proceed..&lt;/strong&gt;&lt;br /&gt;
So I find myself with a delema: -&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;how to produce interesting and useful words, in the sense of their not being too prescriptive in their raw form and useful in this current context.&lt;/li&gt;
  &lt;li&gt;considering the formats these words appear to be available to me, how am I going to use them?
Hopefully solutions will come as I work through these issues step by step.
Perhaps I can produce some quotes and phrases through some kind of AI, using something like Amazon Alexa to generate texts. Or perhaps I could look into &lt;strong&gt;web scraping / crawling&lt;/strong&gt; and find useable text by actually going and looking for it. Scaping is actually something that appeals to me - I hope to come back to at some point in the future. Would I need to develop a database of my own or can I access an existing one using an intelligent search facility?&lt;br /&gt;
&lt;strong&gt;Here’s one:&lt;/strong&gt; &lt;a href=&quot;https://commoncrawl.org/&quot;&gt;Common Crawl&lt;/a&gt; - &lt;em&gt;“We build and maintain an open repository of web crawl data that can be accessed and analyzed by anyone.”&lt;/em&gt;.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;A possible solution?&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.datamuse.com/api/&quot;&gt;Datamuse API&lt;/a&gt; provides varied ways of searching for words - e.g. ‘sounds like’, ‘means like’, ‘spelled like’, ‘related word’, ‘starts with letter’, ‘contains letter’ etc. This could be very useful in a game led more by the players themselves, rather than the by the capabilities of API itself. The random aspect problem will still be there to be solved, but perhaps it is something that can be added at a later date, but for now this should not detract from moving forward and allowing a general idea of an app or game from developing.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formulating ideas for games&lt;/strong&gt;&lt;br /&gt;
..how could I make use of such an API?&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A suite of simple games for bored car passengers&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;Looking for a reasonable and achievable use of the time I have left on the App Jam.&lt;/em&gt;&lt;br /&gt;
Perhaps I could develop a suite of word games or activities of the type that families use to pass the time on long car journeys.&lt;br /&gt;
There are a number of possibilities that Datamuse API can be used for, if it is used creatively. I could also make use of a thesaurus API if required. &lt;br /&gt;
At this point, I have potentially around forty hours left - if I set myself the goal of producing concepts for four games in quick succession, giving myself two hours on each one, I will have around thirty-two hours left in which to put together wire-frame representations of the concepts. If I again give myself two hours for each game, then I will have approximately twenty-eight hours in which to make a stab at coding them. I may find that time slips here and there, or that I have given myself too much to do. I will allow for a small amount of lee-way, but will force myself to cut off short rather than eat into the next phase.&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;I Spy&lt;/strong&gt; : using ‘sounds like’, ‘begins with’ etc.&lt;br /&gt;
&lt;strong&gt;Chinese Whispers&lt;/strong&gt; - developed from the concept outlined earlier, where meanings change through small incremental ‘misunderstandings’ introduced via the thesaurus.&lt;br /&gt;
&lt;strong&gt;Guess the word&lt;/strong&gt; : present player with text with certain words replaced with synonyms or antonyms - the player must guess the real word.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;any-word---a-word-guessing-game&quot;&gt;&lt;span style=&quot;color:darkblue&quot;&gt;&lt;strong&gt;Any Word&lt;/strong&gt; - a word-guessing game&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;..similar to &lt;strong&gt;&lt;em&gt;‘I Spy..’&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;“Think of a word, any word”&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;\images\any-word-1.jpg&quot; alt=&quot;Any Word 1&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
The idea is that players (showing two here, but could be more) present their &lt;strong&gt;opponent&lt;/strong&gt; with a series of &lt;strong&gt;guiding&lt;/strong&gt; questions about a word they have in mind. Datamuse API provides facilities for producing answers that could fit these kinds of questions - ‘sounds like’, ‘begins with’, ‘related to’ etc. &lt;br /&gt;
The opponent will make a guess and, if wrong will be presented with the next clue. &lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;\images\any-word-2.jpg&quot; alt=&quot;Any Word 2&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The game will be between two or more players: &lt;strong&gt;Opponent&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;The game will be constrained by the capabilities of the API: &lt;strong&gt;Restricted&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;The first player leads the second player towards the correct word: &lt;strong&gt;Guide&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;One small step forwards, but the treasure in sight is starting to lose its lustre&lt;/strong&gt;&lt;br /&gt;
Having reviewed this process after making a start on mapping an idea for one of the possible games, I have decided it would be appear to be too much to try to build a suite of games at this stage. I believe that, for now, simply showing the &lt;em&gt;possibility&lt;/em&gt; of creating a suite is enough. I have found that it hasn’t taken long to confirm the suspicion that it would be all too easy to underestimate the amount of work involved in realising such an ambitious target.  At least, it is ambitious for me. With more experience of this kind of creative development activity and, of course, the app jam concept itself, I would hope to be&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;able to work faster&lt;/li&gt;
  &lt;li&gt;have a better idea of what I will need to do next&lt;/li&gt;
  &lt;li&gt;know how to manage my own expectations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The main reason for trying to take on several small apps in a suite, stems from my concern that the single idea I’ve spent most of the time on is actually &lt;em&gt;not as interesting as I’d like or thought it would be&lt;/em&gt;. Maybe it is neither &lt;em&gt;exciting&lt;/em&gt; enough as a game nor &lt;em&gt;interesting&lt;/em&gt; enough as an intellectual excercise. However, it is difficult to know, at this stage, if this will ultimately turn out to be true.&lt;/p&gt;

&lt;p&gt;Perhaps, if the relatively simple idea behind the games are embellished by clever game-play that graphically represents the progress players are making in an interesting, creative and aesthetically-pleasing way, then the game will be bestowed with more appeal, appearing to be more unique and able to stand on their own. 
&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Making the game-play more interesting&lt;/strong&gt;&lt;br /&gt;
A selection of ideas for making a fairly stayed intellectual game into something that may have a bit more of a buzz about it..&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Build a tower&lt;/li&gt;
  &lt;li&gt;Fill a grid&lt;/li&gt;
  &lt;li&gt;Knock down a wall&lt;/li&gt;
  &lt;li&gt;Cross a river / road / lake / island&lt;/li&gt;
  &lt;li&gt;Climb a mountain&lt;/li&gt;
  &lt;li&gt;Destroy&lt;/li&gt;
  &lt;li&gt;Be destroyed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this stage I feel I am moving away from my initial ideas and towards something that could be considered challenging in a more ‘gamic’, rather than purely intellectual, sense. For the player, a sense of progress and achievement can maybe be gained not just from the ability to solve puzzles, but from being able to do so in a more challenging environment, that is more immersive, interactive and ultimately… &lt;strong&gt;fun!&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Three Little Words Three words: selected randomly using VNA (verb, noun, adjective) cards form the basis of the App Jam activity - an intensive period of development and reflective practice. 48 hours: the time allocated for this activity. Although it has been suggested that we should try to use the full 48 hours, it is also recognised that we may not be able to find such an amount - after all, it is time which has to exist alongside the usual course study, reading, learning, journal-writing and, of course, everyday life. In my case, the latter is particularly time-consuming in itself, being as it involves a working life and a young and demanding family. At this stage I find I really have little idea of how much time 48 hours is - at least in the sense of finding despersed pockets here and there in which to allocate time both for pure development and for reflection. This is uncharted territory for me. This being the case, I have decided not to try to plan too much in advance but to move forward for short periods before pausing and evaluating what I have done. Hopefully, these moments of reflection will provide the basis and knowledge from which I can plan my next steps.</summary></entry><entry><title type="html">Week Two - Considering progamming languages</title><link href="http://localhost:4000/2019/02/09/week-two-programming-languages.html" rel="alternate" type="text/html" title="Week Two - Considering progamming languages" /><published>2019-02-09T00:00:00+00:00</published><updated>2019-02-09T00:00:00+00:00</updated><id>http://localhost:4000/2019/02/09/week-two-programming-languages</id><content type="html" xml:base="http://localhost:4000/2019/02/09/week-two-programming-languages.html">&lt;p&gt;Having spent a not insignificant  amount time working with SQL Server and other database technologies, whilst also dipping my toes into PHP, Visual Basic, HTML and basic JavaScript, it was refreshing and satisfying to find myself fortuitously thrust into a new team, assembled for the purpose of designing and implementing a brand new database-connected web application, built on SQL Server and extensively utilising the classic and celebrated web dev triumvirate of .NET MVC, WCF and HTML5 (as in the full definition of HTML5, which somehow modestly includes JavaScript/jQuery and CSS3). It was very much ‘in at the deep end’, but a fantastic platform for learning – not just about the bleeding edge languages, frameworks and platforms, but also development practice. Agile was part of this new, exciting world, as was working with a team of experienced contractors whose experience and knowledge were available on tap. I found myself immersed in full-stack dev heaven!&lt;br /&gt;&lt;br /&gt; 
It’s interesting, looking back, at how time can actually appear to move slower than changes in must-have developmental knowledge and practice, tools, languages and platforms. In many ways, trends that are current in early 2019 could be seen appearing on the horizon way back in 2013 when I embarked on this journey. The power of web-based development was firmly establishing itself in the browser – &lt;a href=&quot;https://javascript.info/&quot;&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/a&gt;, being the language of the browser, was becoming a necessity and, to me, a very exciting one at that. Functional programming in JavaScript – as close to object-oriented programming for the very front-end web as you were ever to find, was the need-to-learn paradigm. Some of the frameworks that were appearing, such as &lt;a href=&quot;https://knockoutjs.com/&quot;&gt;&lt;strong&gt;Knockout.js&lt;/strong&gt;&lt;/a&gt; seemed to allow ‘magic’ to happen when building interactive and responsive user interfaces in the browser. This, combined with Ajax calls to the database, with data being returned to the browser as JSON objects and used by JavaScript, often via one of these aforementioned frameworks, to immediately update the waiting web-page, seemed to me to be a direction I simply had to follow. The age-old idea of building everything server-side before rendering it in the client was fast becoming the proverbial dinosaur of web development.
Moving into current times, frameworks based on JavaScript are now appearing at quite a rate.  The ‘single-page’ app is the mecca for web-devs. To this end, I’ve begun to immerse myself in &lt;a href=&quot;https://angular.io/&quot;&gt;&lt;strong&gt;Angular&lt;/strong&gt;&lt;/a&gt; – which heavily uses &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/a&gt; (a strongly-typed class-based superset of JavaScript) and its own style of developmental structural ‘scaffolding’ to provide an environment for developing fully-fledged client-side web applications. Other options for obtaining similar ends also exist, such as &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://vuejs.org/&quot;&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/a&gt;, each with its own take on ways of creating JavaScript apps that work and provide reactive and responsive solutions within the browser.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The single-page app&lt;/strong&gt;&lt;br /&gt;
Providing a similar experience to that of mobile devices, it’s not a total surprise that JavaScript frameworks have been appropriated as technologies that can be used to build native mobile apps for both iOS and Android, without having to learn their respective native languages - &lt;a href=&quot;https://swift.org/&quot;&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;http://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html&quot;&gt;&lt;strong&gt;ObjectC&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.java.com/en/&quot;&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/a&gt;  or &lt;a href=&quot;https://kotlinlang.org/&quot;&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/a&gt;. &lt;a href=&quot;http://www.reactnative.com/&quot;&gt;&lt;strong&gt;React Native&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.nativescript.org/&quot;&gt;&lt;strong&gt;NativeScript&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://ionicframework.com/&quot;&gt;&lt;strong&gt;Ionic&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://phonegap.com/&quot;&gt;&lt;strong&gt;PhoneGap&lt;/strong&gt;&lt;/a&gt; make use of JavaScript, in their own particular way. Other options include &lt;a href=&quot;https://flutter.io/?gclid=Cj0KCQiA-onjBRDSARIsAEZXcKa_RmzwoRaIL4tCBVMGfMAyOAmt35eWUqE67Lrq4SBpCUvr2A0eq9YaAuLGEALw_wcB&quot;&gt;&lt;strong&gt;Flutter&lt;/strong&gt;&lt;/a&gt; – the new kid on a block of mostly new kids – using &lt;a href=&quot;https://www.dartlang.org/&quot;&gt;&lt;strong&gt;Dart&lt;/strong&gt;&lt;/a&gt; as its programming language, and &lt;a href=&quot;https://visualstudio.microsoft.com/xamarin/&quot;&gt;&lt;strong&gt;Xamarin&lt;/strong&gt;&lt;/a&gt;, which has been around longer and incorporates Microsoft’s .NET framework and C# as its inspiration. As a creative developer, it can be difficult to know which of these frameworks in which you should throw yourself, if not all. As learning more than one new language is, at best, not easy, learning one at a time would appear the best option.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Native vs hybrid&lt;/strong&gt;&lt;br /&gt;
Worthy of consideration is how desirable, or necessary, are truly native apps when compared with non-native, or hybrid, options. In the case of the latter, the app is essentially a web application wrapped in a browser. A  main difference is in terms of the better performance shown by native apps, as well as their ability to directly access native APIs. Examples of going native include &lt;strong&gt;React Native, NativeScript&lt;/strong&gt; and &lt;strong&gt;Flutter&lt;/strong&gt;, whereas  ensconced web browser options could be provided by &lt;strong&gt;Ionic, PhoneGap&lt;/strong&gt; or, arguably, &lt;strong&gt;Xamarin&lt;/strong&gt;. I write ‘arguably’ because there appears to be some disagreement about whether Xamarin can be classed as native. To me, Xamarin appears to perhaps be closer to native than not, as it is compiled into a low-level native binary code and uses native UI controls, whereas wrappers used by Ionic – Cordova / PhoneGap – rely on purpose-build APIs for such access.  This may not be important, but it’s worth noting.&lt;br /&gt;&lt;br /&gt;
Personally, I have begun investigating and investing in Angular and NativeScript. This is partly because the structural nature of Angular appealed to me, as did the strongly-typed nature of TypeScript, which enhances and extends the flexibility of JavaScript - a language I’ve already enjoyed delving into for a number of years - whilst the fact that the end result is compiled into JavaScript, allowing highly interactive websites and web apps, and into native Android and iOS apps for good performance on mobile devices.
However, also on my horizon for some future attention are Flutter and Swift. There appears to be a lot of interest in the &lt;strong&gt;Flutter&lt;/strong&gt; framework, particularly with regard to the ability to directly access the screen via low-level rendering using Google’s Skia graphics library, along with its interfacing with platform-specific SDKs of both Android and iOS. It also appears to allow for fairly rapid development – partly due to low re-build times during development (&lt;a href=&quot;https://medium.com/@dev.n/why-flutter-an-android-developers-take-dd2b6033029c&quot;&gt;see article in medium.com&lt;/a&gt;).&lt;br /&gt;
&lt;strong&gt;Swift&lt;/strong&gt; appears to be a recommended language across the dev community and, although originally intended for iOS, it has gone open source and gained the ability to compile code for the Android platform (&lt;a href=&quot;https://blog.readdle.com/why-we-use-swift-for-android-db449feeacaf&quot;&gt;see this interesting blog&lt;/a&gt;) &lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Unity and C#&lt;/strong&gt;&lt;br /&gt;
I have only recently begun looking at Unity in terms of understanding how 2D &amp;amp; 3D animations and Augmented Reality can be created. As I already know C# I see this as helping create a relatively smooth learning curve, although I have very little experience of the Unity environment itself. AR, the relation and integration between location, reality and imaginary is certainly something that holds my interest. As a maker of music and practitioner of the ‘sonic arts’ I would also like to explore any potential there may exist between real and imaginary that is not simply visual, but also aural and sensory in a wider context. I am so far unsure what platforms and programming languages would be worth pursuing to these ends.&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Coming up..&lt;/strong&gt;
&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;,
&lt;a href=&quot;http://skilldrick.github.io/easy6502/&quot;&gt;Assembly&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Having spent a not insignificant amount time working with SQL Server and other database technologies, whilst also dipping my toes into PHP, Visual Basic, HTML and basic JavaScript, it was refreshing and satisfying to find myself fortuitously thrust into a new team, assembled for the purpose of designing and implementing a brand new database-connected web application, built on SQL Server and extensively utilising the classic and celebrated web dev triumvirate of .NET MVC, WCF and HTML5 (as in the full definition of HTML5, which somehow modestly includes JavaScript/jQuery and CSS3). It was very much ‘in at the deep end’, but a fantastic platform for learning – not just about the bleeding edge languages, frameworks and platforms, but also development practice. Agile was part of this new, exciting world, as was working with a team of experienced contractors whose experience and knowledge were available on tap. I found myself immersed in full-stack dev heaven! It’s interesting, looking back, at how time can actually appear to move slower than changes in must-have developmental knowledge and practice, tools, languages and platforms. In many ways, trends that are current in early 2019 could be seen appearing on the horizon way back in 2013 when I embarked on this journey. The power of web-based development was firmly establishing itself in the browser – JavaScript, being the language of the browser, was becoming a necessity and, to me, a very exciting one at that. Functional programming in JavaScript – as close to object-oriented programming for the very front-end web as you were ever to find, was the need-to-learn paradigm. Some of the frameworks that were appearing, such as Knockout.js seemed to allow ‘magic’ to happen when building interactive and responsive user interfaces in the browser. This, combined with Ajax calls to the database, with data being returned to the browser as JSON objects and used by JavaScript, often via one of these aforementioned frameworks, to immediately update the waiting web-page, seemed to me to be a direction I simply had to follow. The age-old idea of building everything server-side before rendering it in the client was fast becoming the proverbial dinosaur of web development. Moving into current times, frameworks based on JavaScript are now appearing at quite a rate. The ‘single-page’ app is the mecca for web-devs. To this end, I’ve begun to immerse myself in Angular – which heavily uses TypeScript (a strongly-typed class-based superset of JavaScript) and its own style of developmental structural ‘scaffolding’ to provide an environment for developing fully-fledged client-side web applications. Other options for obtaining similar ends also exist, such as React and Vue.js, each with its own take on ways of creating JavaScript apps that work and provide reactive and responsive solutions within the browser.</summary></entry><entry><title type="html">Week One - The Creative Piece</title><link href="http://localhost:4000/2019/02/04/week-one-creative-assignment.html" rel="alternate" type="text/html" title="Week One - The Creative Piece" /><published>2019-02-04T00:00:00+00:00</published><updated>2019-02-04T00:00:00+00:00</updated><id>http://localhost:4000/2019/02/04/week-one-creative-assignment</id><content type="html" xml:base="http://localhost:4000/2019/02/04/week-one-creative-assignment.html">&lt;h3 id=&quot;master-jammer&quot;&gt;Master Jammer&lt;/h3&gt;

&lt;p&gt;“&lt;em&gt;As long as we have each other we will never run out of problems&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;The line seems to resonate with something I have some experience with, i.e. music. This phrase could easily have been written about music itself, which can be easily seen as the presentation and attempted resolution of a series of problems. Apart from some very determined attempts in the realm of the avant-garde to detach musical production from its human-centred origins, much of what drives this production is our social nature and our determination to move forward with new ideas and to formulate responses to what has come before.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;I began to think of how this process may be formalised into actions that could be crystallised within the medium of an app.&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Musical collaboration and how it (sometimes) works&lt;/strong&gt;&lt;br /&gt;
I focused on the idea of multiple musicians creating musical ideas that pose questions that demand responses from their peers.  Looking at how musicians in a band often write songs together, whether this is via a relatively loose process of ‘jamming’ or by sitting down and meticulously working through and developing ideas, I began to see it as essentially a process whereby &lt;strong&gt;&lt;em&gt;possible musical solutions are developed as a response to being confronted by a series of musical problems&lt;/em&gt;&lt;/strong&gt;.  In this case, the chosen, ‘successful’ solution, is the one that wins through on consensus.  It is the one that draws the most admiration from those participating. Essentially, it is a form of democracy.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not just a jam on a telephone line&lt;/strong&gt;&lt;br /&gt;
I started by trying to find a formal solution to the problem of musicians, potentially dispersed across great distances, coming together in order to make music collaboratively. Rather than simply providing an open channel on the internet and providing a facility for musicians to jam their ideas across what would, in essence, be a high-quality telephone line, to an extent I wanted to deconstruct and formalise the &lt;strong&gt;&lt;em&gt;actual processes of producing collaborative music&lt;/em&gt;&lt;/strong&gt;, to bake them into something that is an &lt;strong&gt;&lt;em&gt;interesting and unique activity in its own right&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A game of musical collaboration&lt;/strong&gt;&lt;br /&gt;
As the idea developed, I began to see how this process could be structured along workflow lines similar in some respects to a game.  The graphic below provides an attempt at mapping out one way of achieving this. I am sure that there are many ways and directions this concept could be developed. However, I decided to adhere to one possible avenue and see where it leads:-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The game could be initialised by agreeing, at the outset, the constraints of a recognisable song structure. For example, &lt;em&gt;ABABCBD&lt;/em&gt; – or &lt;em&gt;verse, chorus, verse, chorus, middle eight, chorus, outro&lt;/em&gt;. Then additional formal structures could also be agreed upon, such as measure and tempo, say &lt;em&gt;4/4 time at 120bpm&lt;/em&gt;. These need not be set in stone and could potentially be amended during the game (see the graphic outline below). Drum beats could be provided as an option, along with a backing track or a chord progression, thus providing over-arching music constraints, or a restrictive ‘template’.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The musicians – or ‘players’ - would decide who is to kick-start the process and provide the first phrase, theme or ‘riff’.  Alternatively, the app itself could kick start proceedings with an internally-generated or pre-recorded theme.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Each player would then have the opportunity to play their response to that theme. Once all players have submitted their responses, everyone will vote on their favourite. Players would be prevented from voting for their own. The winning phrase would then be appended to the track and the others put into a ‘theme pot’.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Points would be accumulated when a player’s idea wins the vote.  The build-up of points would allow successful players to replace phrases or themes with their preferred options, or even to suggest amendments to the arrangement itself.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The game would end when the agreed arrangement put forward at the start (and potentially amended during the game) has been completed. The winner will be the player who has had the biggest influence on the resulting song/track/masterpiece and, as a consequence, will have accumulated the most points.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;\images\jam-master-map.jpg&quot; alt=&quot;jam-master-map&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Musicality at a premium?&lt;/strong&gt;&lt;br /&gt;
A significant challenge would be to make the app responsive in a way that is acceptable to musicians. If the game is to be close to being jam-like in its ambitions (without necessarily being an actual jam) then a live feel must be maintained with a fast-paced and relatively immediate ‘question-response’ flow.  It would be possible to adopt a more studious approach, where musicians work through their ideas in a more considered and controlled manner, but this would be quite a departure from the original concept where a maintained pace and immediacy would enhance the game with an increased sense of jeopordy and, consequently, fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Audio streaming, virtual instruments or MIDI?&lt;/strong&gt;&lt;br /&gt;
Game-play is one thing - the medium is quite another.  I envisaged this as being a live play-along / play-together concept using live audio streaming via a microphone. However, it could be that virtual instruments, or even MIDI, be used instead of real instruments.  In this scenario, players would select their chosen instrument and a graphical interface would facilitate live playing.  This would likely be a piano-style keyboard but there is potential to experiment with different and unique methods of converting musical gestures into musical reality. The technology required for each of these options would be very different and each has its own appeals, advantages and shortcomings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technical issues&lt;/strong&gt;&lt;br /&gt;
Live streaming over the internet is inherently compromised by the inevitability of time-lag, or latency. This would clearly be a problem when streaming live audio. However, it may be possible to avoid most, if not all, such problems if the game-play is such that no actual live streaming is used. For example, players would not necessary need to play in real-time with other players. Instead, it may be that they would each play along with the recorded arrangement as it exists &lt;em&gt;thus far&lt;/em&gt;, adding their own part to submit for peer voting. If it is not possible to totally avoid playing together live, then it seems that the &lt;strong&gt;best latency avoidance (i.e. ping time) currently achieved averages around 40ms&lt;/strong&gt;, which may be perfectly serviceable in the context of this app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Addressing challenges and obstaces&lt;/strong&gt;&lt;br /&gt;
Aside from the above-outlined issues surrounding the physical limitations of the available technology - prodeminantly internet speed - how could this app be brought into being? This is clearly something that presents a wide set of problems and requires considerable thought and planning, backed up by a good knowledge of not only the technologies that need to be brought into play but of how they can be made to work together, with each playing their own necessary part in the attainment of a single goal. In terms of technological know-how and experience, for some time my strength has been in database and middle-to-front-end web development. Due to a desire to work more on the client-side and an interest in the user-interface, I have recently been making inroads in this direction.&lt;br /&gt;&lt;br /&gt;
Creating an app such as this, from initial ideas and concept, through planning, prototyping and building, to deployment/hosting and marketing, will inevitably require a significant grasp of most, if not all, of the full stack of technologies. Once the prototyping phase is well underway I would expect to have a fairly comprehensive idea of what technologies and knowledge will be required and at which point a programme of research and self-learning can be put into place. At this stage I can anticipate certain areas I’d need to start to explore: for example, working with sound is something I’ve not done up to this point, in any form, as is streaming and web-socket technology. I have also begun to explore cloud technologies, such as those offered by AWS and Firebase, which I would expect to play a large part.&lt;br /&gt;&lt;br /&gt;
So it’s fair to say there are plenty of areas that would need to be explored and questions asked to find suitable solutions. However, I believe I have enough knowledge to know where to look for advice and answers. Such a project is one that I would commence with the certain knowledge that it will be an interesting, albeit steep, learning curve.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What’s already available on the market?&lt;/strong&gt;&lt;br /&gt;
There are a number of website / app-based options facilitating musicians playing live over an internet connection. There tends to be an issue with latency / real-time lag that has not genuinely been overcome, although various efforts have been made.  Generally, though, they current offerings appear to be similar in terms of scope and ambition, offering from one or all of a selection of live jamming, online recording, social interaction &amp;amp; affirmation, collaboration and cloud-based sharing. 
My research did not uncover anything similar to this concept in terms of work-flow or a creation-collaboration game.&lt;/p&gt;

&lt;p&gt;Examples are:-&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.ejamming.com&quot;&gt;eJamming&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Jamming over the internet.  A  simple concept that seems to work, although the demo on YouTube, to my ears, suffers slightly from latency (lag), albeit small.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.jamkazam.com&quot;&gt;JamKazam&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Another jamming tool, but appears to be a hardware rather than software solution - the website does not make it very clear how this works. It appears that the idea is that musicians play along to backing tracks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://jammr.net&quot;&gt;Jammr&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Another jamming tool - currently in beta. Looks simple and straightforward and claims zero latency. I have not been able to test the claim of achieving zero latency, but I have doubts as to whether this is currently possible, particularly as no rivals appear to make such a claim.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.avid.com/pro-tools/cloud-collaboration&quot;&gt;Avid Cloud Collaboration for Pro Tools&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Remote recording using the Avid Pro Tools platform&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://llcon.sourceforge.net/&quot;&gt;Jamulus&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Open source. Requires 200 kbps for both upstream and downstream. 40ms average latency.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.soundtrap.com&quot;&gt;Soundtrap&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Cloud-based onine music and podcast recording&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://music.pibox.com&quot;&gt;pibox&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Mix reviewing, communication, file sharing, and cloud storage&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://www.vampr.me&quot;&gt;vampr&lt;/a&gt;&lt;/strong&gt;&lt;br /&gt;
Mobile: Android &amp;amp; iOS
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Further possibilities&lt;/strong&gt;&lt;br /&gt;
The interactive nature of an online music collaboration or jamming concept is fascinatingly open to the potential of enhancement and the development of ideas beyond connecting and interacting in a purely audio environment. I would be interested in exploring the possibilities of connecting visually and immersively, into areas of &lt;strong&gt;virtual and augmented reality&lt;/strong&gt;. The potential for musicians to immerse themselves in a virtual environment in which they could play alongside each other could be extremely exciting. Facial recognition and ‘super-imposition’ technologies could potentially allow musicians to experience &lt;strong&gt;playing alongside anyone, or anything, in a place of their own choosing&lt;/strong&gt;, including with ‘celebrities’ or even fictitious cartoon creations of their own making or purchased from an online library of characters.&lt;/p&gt;</content><author><name></name></author><summary type="html">Master Jammer</summary></entry></feed>